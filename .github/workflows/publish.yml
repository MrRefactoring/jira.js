name: Publish npm Package

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '18'

jobs:
  version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Extract version from tag
        id: version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$TAG_VERSION" >> $GITHUB_OUTPUT

      - name: Determine source branch
        id: branch
        run: |
          TAG_COMMIT=$(git rev-list -n 1 ${{ github.ref }})
          git fetch --all
          SOURCE_BRANCH=$(git branch -r --contains $TAG_COMMIT | sed -E 's|^.*origin/([^ ]+).*$|\1|' | head -1)

          if [ -z "$SOURCE_BRANCH" ]; then
            echo "Error: Could not determine source branch for tag ${{ github.ref }}"
            exit 1
          fi
          echo "source_branch=$SOURCE_BRANCH" >> $GITHUB_OUTPUT

      - name: Check if version needs to be updated
        id: check_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION=${{ steps.version.outputs.version }}
          if [ "$CURRENT_VERSION" == "$TAG_VERSION" ]; then
            echo "Version not changed. Skipping version bump."
            echo "skip_version_bump=true" >> $GITHUB_OUTPUT
          else
            echo "Version needs to be updated."
            echo "skip_version_bump=false" >> $GITHUB_OUTPUT
          fi

      - name: Bump version in package.json
        if: steps.check_version.outputs.skip_version_bump == 'false'
        run: |
          npm install
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add package.json package-lock.json
          git commit -m "Bump version to ${{ steps.version.outputs.version }} [skip ci]"
          git push origin HEAD:${{ steps.branch.outputs.source_branch }}

      - name: Upload package files
        uses: actions/upload-artifact@v4
        with:
          name: package-files
          path: |
            package.json
            package-lock.json

  build:
    runs-on: ubuntu-latest
    needs: version

    steps:
      - name: Download package files
        uses: actions/download-artifact@v4
        with:
          name: package-files
          path: .

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run build
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/

  lint:
    runs-on: ubuntu-latest
    needs: version

    steps:
      - name: Download package files
        uses: actions/download-artifact@v4
        with:
          name: package-files
          path: .

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run linting
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: version

    steps:
      - name: Download package files
        uses: actions/download-artifact@v4
        with:
          name: package-files
          path: .

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  publish:
    runs-on: ubuntu-latest
    needs: [build, lint, test]

    steps:
      - name: Download package files
        uses: actions/download-artifact@v4
        with:
          name: package-files
          path: .

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist/

      - name: Install dependencies
        run: npm install

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
