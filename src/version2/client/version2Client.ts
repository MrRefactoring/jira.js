import { BaseClient } from '../../clients/baseClient';
import { AnnouncementBanner } from '../announcementBanner';
import { ApplicationRoles } from '../applicationRoles';
import { AppMigration } from '../appMigration';
import { AppProperties } from '../appProperties';
import { AuditRecords } from '../auditRecords';
import { Avatars } from '../avatars';
import { Dashboards } from '../dashboards';
import { DynamicModules } from '../dynamicModules';
import { Filters } from '../filters';
import { FilterSharing } from '../filterSharing';
import { GroupAndUserPicker } from '../groupAndUserPicker';
import { Groups } from '../groups';
import { IssueAttachments } from '../issueAttachments';
import { IssueCommentProperties } from '../issueCommentProperties';
import { IssueComments } from '../issueComments';
import { IssueCustomFieldConfigurationApps } from '../issueCustomFieldConfigurationApps';
import { IssueCustomFieldContexts } from '../issueCustomFieldContexts';
import { IssueCustomFieldOptions } from '../issueCustomFieldOptions';
import { IssueCustomFieldOptionsApps } from '../issueCustomFieldOptionsApps';
import { IssueCustomFieldValuesApps } from '../issueCustomFieldValuesApps';
import { IssueFieldConfigurations } from '../issueFieldConfigurations';
import { IssueFields } from '../issueFields';
import { IssueLinks } from '../issueLinks';
import { IssueLinkTypes } from '../issueLinkTypes';
import { IssueNavigatorSettings } from '../issueNavigatorSettings';
import { IssueNotificationSchemes } from '../issueNotificationSchemes';
import { IssuePriorities } from '../issuePriorities';
import { IssueProperties } from '../issueProperties';
import { IssueRemoteLinks } from '../issueRemoteLinks';
import { IssueResolutions } from '../issueResolutions';
import { Issues } from '../issues';
import { IssueSearch } from '../issueSearch';
import { IssueSecurityLevel } from '../issueSecurityLevel';
import { IssueSecuritySchemes } from '../issueSecuritySchemes';
import { IssueTypeProperties } from '../issueTypeProperties';
import { IssueTypes } from '../issueTypes';
import { IssueTypeSchemes } from '../issueTypeSchemes';
import { IssueTypeScreenSchemes } from '../issueTypeScreenSchemes';
import { IssueVotes } from '../issueVotes';
import { IssueWatchers } from '../issueWatchers';
import { IssueWorklogProperties } from '../issueWorklogProperties';
import { IssueWorklogs } from '../issueWorklogs';
import { JiraExpressions } from '../jiraExpressions';
import { JiraSettings } from '../jiraSettings';
import { JQL } from '../jQL';
import { JqlFunctionsApps } from '../jqlFunctionsApps';
import { Labels } from '../labels';
import { LicenseMetrics } from '../licenseMetrics';
import { Myself } from '../myself';
import { Permissions } from '../permissions';
import { PermissionSchemes } from '../permissionSchemes';
import { ProjectAvatars } from '../projectAvatars';
import { ProjectCategories } from '../projectCategories';
import { ProjectComponents } from '../projectComponents';
import { ProjectEmail } from '../projectEmail';
import { ProjectFeatures } from '../projectFeatures';
import { ProjectKeyAndNameValidation } from '../projectKeyAndNameValidation';
import { ProjectPermissionSchemes } from '../projectPermissionSchemes';
import { ProjectProperties } from '../projectProperties';
import { ProjectRoleActors } from '../projectRoleActors';
import { ProjectRoles } from '../projectRoles';
import { Projects } from '../projects';
import { ProjectTypes } from '../projectTypes';
import { ProjectVersions } from '../projectVersions';
import { Screens } from '../screens';
import { ScreenSchemes } from '../screenSchemes';
import { ScreenTabFields } from '../screenTabFields';
import { ScreenTabs } from '../screenTabs';
import { ServerInfo } from '../serverInfo';
import { Status } from '../status';
import { Tasks } from '../tasks';
import { TimeTracking } from '../timeTracking';
import { UIModificationsApps } from '../uIModificationsApps';
import { UserProperties } from '../userProperties';
import { Users } from '../users';
import { UserSearch } from '../userSearch';
import { Webhooks } from '../webhooks';
import { Workflows } from '../workflows';
import { WorkflowSchemeDrafts } from '../workflowSchemeDrafts';
import { WorkflowSchemeProjectAssociations } from '../workflowSchemeProjectAssociations';
import { WorkflowSchemes } from '../workflowSchemes';
import { WorkflowStatusCategories } from '../workflowStatusCategories';
import { WorkflowStatuses } from '../workflowStatuses';
import { WorkflowTransitionProperties } from '../workflowTransitionProperties';
import { WorkflowTransitionRules } from '../workflowTransitionRules';

export class Version2Client extends BaseClient {
  announcementBanner = new AnnouncementBanner(this);
  applicationRoles = new ApplicationRoles(this);
  appMigration = new AppMigration(this);
  appProperties = new AppProperties(this);
  auditRecords = new AuditRecords(this);
  avatars = new Avatars(this);
  dashboards = new Dashboards(this);
  dynamicModules = new DynamicModules(this);
  filters = new Filters(this);
  filterSharing = new FilterSharing(this);
  groupAndUserPicker = new GroupAndUserPicker(this);
  groups = new Groups(this);
  issueAttachments = new IssueAttachments(this);
  issueCommentProperties = new IssueCommentProperties(this);
  issueComments = new IssueComments(this);
  issueCustomFieldConfigurationApps = new IssueCustomFieldConfigurationApps(this);
  issueCustomFieldContexts = new IssueCustomFieldContexts(this);
  issueCustomFieldOptions = new IssueCustomFieldOptions(this);
  issueCustomFieldOptionsApps = new IssueCustomFieldOptionsApps(this);
  issueCustomFieldValuesApps = new IssueCustomFieldValuesApps(this);
  issueFieldConfigurations = new IssueFieldConfigurations(this);
  issueFields = new IssueFields(this);
  issueLinks = new IssueLinks(this);
  issueLinkTypes = new IssueLinkTypes(this);
  issueNavigatorSettings = new IssueNavigatorSettings(this);
  issueNotificationSchemes = new IssueNotificationSchemes(this);
  issuePriorities = new IssuePriorities(this);
  issueProperties = new IssueProperties(this);
  issueRemoteLinks = new IssueRemoteLinks(this);
  issueResolutions = new IssueResolutions(this);
  issues = new Issues(this);
  issueSearch = new IssueSearch(this);
  issueSecurityLevel = new IssueSecurityLevel(this);
  issueSecuritySchemes = new IssueSecuritySchemes(this);
  issueTypeProperties = new IssueTypeProperties(this);
  issueTypes = new IssueTypes(this);
  issueTypeSchemes = new IssueTypeSchemes(this);
  issueTypeScreenSchemes = new IssueTypeScreenSchemes(this);
  issueVotes = new IssueVotes(this);
  issueWatchers = new IssueWatchers(this);
  issueWorklogProperties = new IssueWorklogProperties(this);
  issueWorklogs = new IssueWorklogs(this);
  jiraExpressions = new JiraExpressions(this);
  jiraSettings = new JiraSettings(this);
  jql = new JQL(this);
  jqlFunctionsApps = new JqlFunctionsApps(this);
  labels = new Labels(this);
  licenseMetrics = new LicenseMetrics(this);
  myself = new Myself(this);
  permissions = new Permissions(this);
  permissionSchemes = new PermissionSchemes(this);
  projectAvatars = new ProjectAvatars(this);
  projectCategories = new ProjectCategories(this);
  projectComponents = new ProjectComponents(this);
  projectEmail = new ProjectEmail(this);
  projectFeatures = new ProjectFeatures(this);
  projectKeyAndNameValidation = new ProjectKeyAndNameValidation(this);
  projectPermissionSchemes = new ProjectPermissionSchemes(this);
  projectProperties = new ProjectProperties(this);
  projectRoleActors = new ProjectRoleActors(this);
  projectRoles = new ProjectRoles(this);
  projects = new Projects(this);
  projectTypes = new ProjectTypes(this);
  projectVersions = new ProjectVersions(this);
  screens = new Screens(this);
  screenSchemes = new ScreenSchemes(this);
  screenTabFields = new ScreenTabFields(this);
  screenTabs = new ScreenTabs(this);
  serverInfo = new ServerInfo(this);
  status = new Status(this);
  tasks = new Tasks(this);
  timeTracking = new TimeTracking(this);
  uiModificationsApps = new UIModificationsApps(this);
  userProperties = new UserProperties(this);
  users = new Users(this);
  userSearch = new UserSearch(this);
  webhooks = new Webhooks(this);
  workflows = new Workflows(this);
  workflowSchemeDrafts = new WorkflowSchemeDrafts(this);
  workflowSchemeProjectAssociations = new WorkflowSchemeProjectAssociations(this);
  workflowSchemes = new WorkflowSchemes(this);
  workflowStatusCategories = new WorkflowStatusCategories(this);
  workflowStatuses = new WorkflowStatuses(this);
  workflowTransitionProperties = new WorkflowTransitionProperties(this);
  workflowTransitionRules = new WorkflowTransitionRules(this);
}
