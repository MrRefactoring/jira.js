import { BaseClient } from '@/clients/baseClient.mjs';
import { AnnouncementBanner } from '@/version3/announcementBanner.mjs';
import { AppMigration } from '@/version3/appMigration.mjs';
import { AppProperties } from '@/version3/appProperties.mjs';
import { ApplicationRoles } from '@/version3/applicationRoles.mjs';
import { AuditRecords } from '@/version3/auditRecords.mjs';
import { Avatars } from '@/version3/avatars.mjs';
import { Dashboards } from '@/version3/dashboards.mjs';
import { DynamicModules } from '@/version3/dynamicModules.mjs';
import { FilterSharing } from '@/version3/filterSharing.mjs';
import { Filters } from '@/version3/filters.mjs';
import { GroupAndUserPicker } from '@/version3/groupAndUserPicker.mjs';
import { Groups } from '@/version3/groups.mjs';
import { InstanceInformation } from '@/version3/instanceInformation.mjs';
import { IssueAttachments } from '@/version3/issueAttachments.mjs';
import { IssueCommentProperties } from '@/version3/issueCommentProperties.mjs';
import { IssueComments } from '@/version3/issueComments.mjs';
import { IssueCustomFieldConfigurationApps } from '@/version3/issueCustomFieldConfigurationApps.mjs';
import { IssueCustomFieldContexts } from '@/version3/issueCustomFieldContexts.mjs';
import { IssueCustomFieldOptions } from '@/version3/issueCustomFieldOptions.mjs';
import { IssueCustomFieldOptionsApps } from '@/version3/issueCustomFieldOptionsApps.mjs';
import { IssueCustomFieldValuesApps } from '@/version3/issueCustomFieldValuesApps.mjs';
import { IssueFieldConfigurations } from '@/version3/issueFieldConfigurations.mjs';
import { IssueFields } from '@/version3/issueFields.mjs';
import { IssueLinkTypes } from '@/version3/issueLinkTypes.mjs';
import { IssueLinks } from '@/version3/issueLinks.mjs';
import { IssueNavigatorSettings } from '@/version3/issueNavigatorSettings.mjs';
import { IssueNotificationSchemes } from '@/version3/issueNotificationSchemes.mjs';
import { IssuePriorities } from '@/version3/issuePriorities.mjs';
import { IssueProperties } from '@/version3/issueProperties.mjs';
import { IssueRemoteLinks } from '@/version3/issueRemoteLinks.mjs';
import { IssueResolutions } from '@/version3/issueResolutions.mjs';
import { IssueSearch } from '@/version3/issueSearch.mjs';
import { IssueSecurityLevel } from '@/version3/issueSecurityLevel.mjs';
import { IssueSecuritySchemes } from '@/version3/issueSecuritySchemes.mjs';
import { IssueTypeProperties } from '@/version3/issueTypeProperties.mjs';
import { IssueTypeSchemes } from '@/version3/issueTypeSchemes.mjs';
import { IssueTypeScreenSchemes } from '@/version3/issueTypeScreenSchemes.mjs';
import { IssueTypes } from '@/version3/issueTypes.mjs';
import { IssueVotes } from '@/version3/issueVotes.mjs';
import { IssueWatchers } from '@/version3/issueWatchers.mjs';
import { IssueWorklogProperties } from '@/version3/issueWorklogProperties.mjs';
import { IssueWorklogs } from '@/version3/issueWorklogs.mjs';
import { Issues } from '@/version3/issues.mjs';
import { JiraExpressions } from '@/version3/jiraExpressions.mjs';
import { JiraSettings } from '@/version3/jiraSettings.mjs';
import { JQL } from '@/version3/jql.mjs';
import { JqlFunctionsApps } from '@/version3/jqlFunctionsApps.mjs';
import { Labels } from '@/version3/labels.mjs';
import { LicenseMetrics } from '@/version3/licenseMetrics.mjs';
import { Myself } from '@/version3/myself.mjs';
import { PermissionSchemes } from '@/version3/permissionSchemes.mjs';
import { Permissions } from '@/version3/permissions.mjs';
import { ProjectAvatars } from '@/version3/projectAvatars.mjs';
import { ProjectCategories } from '@/version3/projectCategories.mjs';
import { ProjectComponents } from '@/version3/projectComponents.mjs';
import { ProjectEmail } from '@/version3/projectEmail.mjs';
import { ProjectFeatures } from '@/version3/projectFeatures.mjs';
import { ProjectKeyAndNameValidation } from '@/version3/projectKeyAndNameValidation.mjs';
import { ProjectPermissionSchemes } from '@/version3/projectPermissionSchemes.mjs';
import { ProjectProperties } from '@/version3/projectProperties.mjs';
import { ProjectRoleActors } from '@/version3/projectRoleActors.mjs';
import { ProjectRoles } from '@/version3/projectRoles.mjs';
import { ProjectTypes } from '@/version3/projectTypes.mjs';
import { ProjectVersions } from '@/version3/projectVersions.mjs';
import { Projects } from '@/version3/projects.mjs';
import { ScreenSchemes } from '@/version3/screenSchemes.mjs';
import { ScreenTabFields } from '@/version3/screenTabFields.mjs';
import { ScreenTabs } from '@/version3/screenTabs.mjs';
import { Screens } from '@/version3/screens.mjs';
import { ServerInfo } from '@/version3/serverInfo.mjs';
import { Status } from '@/version3/status.mjs';
import { Tasks } from '@/version3/tasks.mjs';
import { TimeTracking } from '@/version3/timeTracking.mjs';
import { UiModificationsApps } from '@/version3/uiModificationsApps.mjs';
import { UserProperties } from '@/version3/userProperties.mjs';
import { UserSearch } from '@/version3/userSearch.mjs';
import { Users } from '@/version3/users.mjs';
import { Webhooks } from '@/version3/webhooks.mjs';
import { Workflows } from '@/version3/workflows.mjs';
import { WorkflowSchemeDrafts } from '@/version3/workflowSchemeDrafts.mjs';
import { WorkflowSchemeProjectAssociations } from '@/version3/workflowSchemeProjectAssociations.mjs';
import { WorkflowSchemes } from '@/version3/workflowSchemes.mjs';
import { WorkflowStatusCategories } from '@/version3/workflowStatusCategories.mjs';
import { WorkflowStatuses } from '@/version3/workflowStatuses.mjs';
import { WorkflowTransitionProperties } from '@/version3/workflowTransitionProperties.mjs';
import { WorkflowTransitionRules } from '@/version3/workflowTransitionRules.mjs';

export class Version3Client extends BaseClient {
  announcementBanner = new AnnouncementBanner(this);
  applicationRoles = new ApplicationRoles(this);
  appMigration = new AppMigration(this);
  appProperties = new AppProperties(this);
  auditRecords = new AuditRecords(this);
  avatars = new Avatars(this);
  dashboards = new Dashboards(this);
  dynamicModules = new DynamicModules(this);
  filters = new Filters(this);
  filterSharing = new FilterSharing(this);
  groupAndUserPicker = new GroupAndUserPicker(this);
  groups = new Groups(this);
  instanceInformation = new InstanceInformation(this);
  issueAttachments = new IssueAttachments(this);
  issueCommentProperties = new IssueCommentProperties(this);
  issueComments = new IssueComments(this);
  issueCustomFieldConfigurationApps = new IssueCustomFieldConfigurationApps(this);
  issueCustomFieldContexts = new IssueCustomFieldContexts(this);
  issueCustomFieldOptions = new IssueCustomFieldOptions(this);
  issueCustomFieldOptionsApps = new IssueCustomFieldOptionsApps(this);
  issueCustomFieldValuesApps = new IssueCustomFieldValuesApps(this);
  issueFieldConfigurations = new IssueFieldConfigurations(this);
  issueFields = new IssueFields(this);
  issueLinks = new IssueLinks(this);
  issueLinkTypes = new IssueLinkTypes(this);
  issueNavigatorSettings = new IssueNavigatorSettings(this);
  issueNotificationSchemes = new IssueNotificationSchemes(this);
  issuePriorities = new IssuePriorities(this);
  issueProperties = new IssueProperties(this);
  issueRemoteLinks = new IssueRemoteLinks(this);
  issueResolutions = new IssueResolutions(this);
  issues = new Issues(this);
  issueSearch = new IssueSearch(this);
  issueSecurityLevel = new IssueSecurityLevel(this);
  issueSecuritySchemes = new IssueSecuritySchemes(this);
  issueTypeProperties = new IssueTypeProperties(this);
  issueTypes = new IssueTypes(this);
  issueTypeSchemes = new IssueTypeSchemes(this);
  issueTypeScreenSchemes = new IssueTypeScreenSchemes(this);
  issueVotes = new IssueVotes(this);
  issueWatchers = new IssueWatchers(this);
  issueWorklogProperties = new IssueWorklogProperties(this);
  issueWorklogs = new IssueWorklogs(this);
  jiraExpressions = new JiraExpressions(this);
  jiraSettings = new JiraSettings(this);
  jql = new JQL(this);
  jqlFunctionsApps = new JqlFunctionsApps(this);
  labels = new Labels(this);
  licenseMetrics = new LicenseMetrics(this);
  myself = new Myself(this);
  permissions = new Permissions(this);
  permissionSchemes = new PermissionSchemes(this);
  projectAvatars = new ProjectAvatars(this);
  projectCategories = new ProjectCategories(this);
  projectComponents = new ProjectComponents(this);
  projectEmail = new ProjectEmail(this);
  projectFeatures = new ProjectFeatures(this);
  projectKeyAndNameValidation = new ProjectKeyAndNameValidation(this);
  projectPermissionSchemes = new ProjectPermissionSchemes(this);
  projectProperties = new ProjectProperties(this);
  projectRoleActors = new ProjectRoleActors(this);
  projectRoles = new ProjectRoles(this);
  projects = new Projects(this);
  projectTypes = new ProjectTypes(this);
  projectVersions = new ProjectVersions(this);
  screens = new Screens(this);
  screenSchemes = new ScreenSchemes(this);
  screenTabFields = new ScreenTabFields(this);
  screenTabs = new ScreenTabs(this);
  serverInfo = new ServerInfo(this);
  status = new Status(this);
  tasks = new Tasks(this);
  timeTracking = new TimeTracking(this);
  uiModificationsApps = new UiModificationsApps(this);
  userProperties = new UserProperties(this);
  users = new Users(this);
  userSearch = new UserSearch(this);
  webhooks = new Webhooks(this);
  workflows = new Workflows(this);
  workflowSchemeDrafts = new WorkflowSchemeDrafts(this);
  workflowSchemeProjectAssociations = new WorkflowSchemeProjectAssociations(this);
  workflowSchemes = new WorkflowSchemes(this);
  workflowStatusCategories = new WorkflowStatusCategories(this);
  workflowStatuses = new WorkflowStatuses(this);
  workflowTransitionProperties = new WorkflowTransitionProperties(this);
  workflowTransitionRules = new WorkflowTransitionRules(this);
}
