"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AppProperties = void 0;
const tslib_1 = require("tslib");
class AppProperties {
    constructor(client) {
        this.client = client;
    }
    getAddonProperties(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const addonKey = typeof parameters === 'string' ? parameters : parameters.addonKey;
            const config = {
                url: `/rest/atlassian-connect/1/addons/${addonKey}/properties`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAddonProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/atlassian-connect/1/addons/${parameters.addonKey}/properties/${parameters.propertyKey}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    putAddonProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/atlassian-connect/1/addons/${parameters.addonKey}/properties/${parameters.propertyKey}`,
                method: 'PUT',
                data: parameters.propertyValue,
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteAddonProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/atlassian-connect/1/addons/${parameters.addonKey}/properties/${parameters.propertyKey}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    putAppProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/forge/1/app/properties/${parameters.propertyKey}`,
                method: 'PUT',
                data: parameters.propertyValue,
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteAppProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/forge/1/app/properties/${parameters.propertyKey}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.AppProperties = AppProperties;
//# sourceMappingURL=appProperties.js.map