"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TeamsInPlan = void 0;
const tslib_1 = require("tslib");
class TeamsInPlan {
    constructor(client) {
        this.client = client;
    }
    getTeams(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/plans/plan/${parameters.planId}/team`,
                method: 'GET',
                params: {
                    cursor: parameters.cursor,
                    maxResults: parameters.maxResults,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    addAtlassianTeam(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/plans/plan/${parameters.planId}/team/atlassian`,
                method: 'POST',
                data: {
                    capacity: parameters.capacity,
                    id: parameters.id,
                    issueSourceId: parameters.issueSourceId,
                    planningStyle: parameters.planningStyle,
                    sprintLength: parameters.sprintLength,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAtlassianTeam(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/plans/plan/${parameters.planId}/team/atlassian/${parameters.atlassianTeamId}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    updateAtlassianTeam(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/plans/plan/${parameters.planId}/team/atlassian/${parameters.atlassianTeamId}`,
                method: 'PUT',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    removeAtlassianTeam(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/plans/plan/${parameters.planId}/team/atlassian/${parameters.atlassianTeamId}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    createPlanOnlyTeam(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/plans/plan/${parameters.planId}/team/planonly`,
                method: 'POST',
                data: {
                    capacity: parameters.capacity,
                    issueSourceId: parameters.issueSourceId,
                    memberAccountIds: parameters.memberAccountIds,
                    name: parameters.name,
                    planningStyle: parameters.planningStyle,
                    sprintLength: parameters.sprintLength,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getPlanOnlyTeam(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/plans/plan/${parameters.planId}/team/planonly/${parameters.planOnlyTeamId}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    updatePlanOnlyTeam(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/plans/plan/${parameters.planId}/team/planonly/${parameters.planOnlyTeamId}`,
                method: 'PUT',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deletePlanOnlyTeam(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/plans/plan/${parameters.planId}/team/planonly/${parameters.planOnlyTeamId}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.TeamsInPlan = TeamsInPlan;
//# sourceMappingURL=teamsInPlan.js.map