"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Myself = void 0;
const tslib_1 = require("tslib");
class Myself {
    constructor(client) {
        this.client = client;
    }
    getPreference(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/mypreferences',
                method: 'GET',
                params: {
                    key: parameters.key,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    setPreference(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/mypreferences',
                method: 'PUT',
                params: {
                    key: parameters.key,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    removePreference(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/mypreferences',
                method: 'DELETE',
                params: {
                    key: parameters.key,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getLocale(callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/mypreferences/locale',
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getCurrentUser(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/myself',
                method: 'GET',
                params: {
                    expand: parameters === null || parameters === void 0 ? void 0 : parameters.expand,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.Myself = Myself;
//# sourceMappingURL=myself.js.map