"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IssueRemoteLinks = void 0;
const tslib_1 = require("tslib");
class IssueRemoteLinks {
    constructor(client) {
        this.client = client;
    }
    getRemoteIssueLinks(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/issue/${parameters.issueIdOrKey}/remotelink`,
                method: 'GET',
                params: {
                    globalId: parameters.globalId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    createOrUpdateRemoteIssueLink(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/issue/${parameters.issueIdOrKey}/remotelink`,
                method: 'POST',
                data: {
                    application: parameters.application,
                    globalId: parameters.globalId,
                    object: parameters.object,
                    relationship: parameters.relationship,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteRemoteIssueLinkByGlobalId(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/issue/${parameters.issueIdOrKey}/remotelink`,
                method: 'DELETE',
                params: {
                    globalId: parameters.globalId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getRemoteIssueLinkById(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/issue/${parameters.issueIdOrKey}/remotelink/${parameters.linkId}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    updateRemoteIssueLink(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/issue/${parameters.issueIdOrKey}/remotelink/${parameters.linkId}`,
                method: 'PUT',
                data: {
                    application: parameters.application,
                    globalId: parameters.globalId,
                    object: parameters.object,
                    relationship: parameters.relationship,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteRemoteIssueLinkById(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/issue/${parameters.issueIdOrKey}/remotelink/${parameters.linkId}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.IssueRemoteLinks = IssueRemoteLinks;
//# sourceMappingURL=issueRemoteLinks.js.map