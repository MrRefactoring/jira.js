"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectPermissionSchemes = void 0;
const tslib_1 = require("tslib");
class ProjectPermissionSchemes {
    constructor(client) {
        this.client = client;
    }
    getProjectIssueSecurityScheme(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const projectKeyOrId = typeof parameters === 'string' ? parameters : parameters.projectKeyOrId;
            const config = {
                url: `/rest/api/3/project/${projectKeyOrId}/issuesecuritylevelscheme`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAssignedPermissionScheme(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const projectKeyOrId = typeof parameters === 'string' ? parameters : parameters.projectKeyOrId;
            const config = {
                url: `/rest/api/3/project/${projectKeyOrId}/permissionscheme`,
                method: 'GET',
                params: {
                    expand: typeof parameters !== 'string' && parameters.expand,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    assignPermissionScheme(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/project/${parameters.projectKeyOrId}/permissionscheme`,
                method: 'PUT',
                params: {
                    expand: parameters.expand,
                },
                data: {
                    id: parameters.id,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getSecurityLevelsForProject(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const projectKeyOrId = typeof parameters === 'string' ? parameters : parameters.projectKeyOrId;
            const config = {
                url: `/rest/api/3/project/${projectKeyOrId}/securitylevel`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.ProjectPermissionSchemes = ProjectPermissionSchemes;
//# sourceMappingURL=projectPermissionSchemes.js.map