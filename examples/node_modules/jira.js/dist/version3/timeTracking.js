"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimeTracking = void 0;
const tslib_1 = require("tslib");
class TimeTracking {
    constructor(client) {
        this.client = client;
    }
    getSelectedTimeTrackingImplementation(callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/configuration/timetracking',
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    selectTimeTrackingImplementation(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/configuration/timetracking',
                method: 'PUT',
                data: {
                    key: parameters === null || parameters === void 0 ? void 0 : parameters.key,
                    name: parameters === null || parameters === void 0 ? void 0 : parameters.name,
                    url: parameters === null || parameters === void 0 ? void 0 : parameters.url,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAvailableTimeTrackingImplementations(callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/configuration/timetracking/list',
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getSharedTimeTrackingConfiguration(callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/configuration/timetracking/options',
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    setSharedTimeTrackingConfiguration(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/configuration/timetracking/options',
                method: 'PUT',
                data: {
                    defaultUnit: parameters.defaultUnit,
                    timeFormat: parameters.timeFormat,
                    workingDaysPerWeek: parameters.workingDaysPerWeek,
                    workingHoursPerDay: parameters.workingHoursPerDay,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.TimeTracking = TimeTracking;
//# sourceMappingURL=timeTracking.js.map