import type * as Models from './models';
import type * as Parameters from './parameters';
import type { Client } from '../clients';
import type { Callback } from '../callback';
import type { Paginated } from '../paginated';
export declare class PrioritySchemes {
    private client;
    constructor(client: Client);
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of
     * priority schemes.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * Permission to access Jira.
     */
    getPrioritySchemes<T = Paginated<Models.PrioritySchemeWithPaginatedPrioritiesAndProjects>>(parameters: Parameters.GetPrioritySchemes | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of
     * priority schemes.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * Permission to access Jira.
     */
    getPrioritySchemes<T = Paginated<Models.PrioritySchemeWithPaginatedPrioritiesAndProjects>>(parameters?: Parameters.GetPrioritySchemes, callback?: never): Promise<T>;
    /**
     * Creates a new priority scheme.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    createPriorityScheme<T = Models.PrioritySchemeId>(parameters: Parameters.CreatePriorityScheme, callback: Callback<T>): Promise<void>;
    /**
     * Creates a new priority scheme.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    createPriorityScheme<T = Models.PrioritySchemeId>(parameters: Parameters.CreatePriorityScheme, callback?: never): Promise<T>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of
     * priorities that would require mapping, given a change in priorities or projects associated with a priority scheme.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * Permission to access Jira.
     */
    suggestedPrioritiesForMappings<T = Paginated<Models.PriorityWithSequence>>(parameters: Parameters.SuggestedPrioritiesForMappings | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of
     * priorities that would require mapping, given a change in priorities or projects associated with a priority scheme.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * Permission to access Jira.
     */
    suggestedPrioritiesForMappings<T = Paginated<Models.PriorityWithSequence>>(parameters?: Parameters.SuggestedPrioritiesForMappings, callback?: never): Promise<T>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of
     * priorities available for adding to a priority scheme.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * Permission to access Jira.
     */
    getAvailablePrioritiesByPriorityScheme<T = Paginated<Models.PriorityWithSequence>>(parameters: Parameters.GetAvailablePrioritiesByPriorityScheme, callback: Callback<T>): Promise<void>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of
     * priorities available for adding to a priority scheme.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * Permission to access Jira.
     */
    getAvailablePrioritiesByPriorityScheme<T = Paginated<Models.PriorityWithSequence>>(parameters: Parameters.GetAvailablePrioritiesByPriorityScheme, callback?: never): Promise<T>;
    /**
     * Updates a priority scheme. This includes its details, the lists of priorities and projects in it
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    updatePriorityScheme<T = Models.UpdatePrioritySchemeResponse>(parameters: Parameters.UpdatePriorityScheme, callback: Callback<T>): Promise<void>;
    /**
     * Updates a priority scheme. This includes its details, the lists of priorities and projects in it
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    updatePriorityScheme<T = Models.UpdatePrioritySchemeResponse>(parameters: Parameters.UpdatePriorityScheme, callback?: never): Promise<T>;
    /**
     * Deletes a priority scheme.
     *
     * This operation is only available for priority schemes without any associated projects. Any associated projects must
     * be removed from the priority scheme before this operation can be performed.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    deletePriorityScheme<T = void>(parameters: Parameters.DeletePriorityScheme, callback: Callback<T>): Promise<void>;
    /**
     * Deletes a priority scheme.
     *
     * This operation is only available for priority schemes without any associated projects. Any associated projects must
     * be removed from the priority scheme before this operation can be performed.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    deletePriorityScheme<T = void>(parameters: Parameters.DeletePriorityScheme, callback?: never): Promise<T>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of
     * priorities by scheme.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * Permission to access Jira.
     */
    getPrioritiesByPriorityScheme<T = Paginated<Models.PriorityWithSequence>>(parameters: Parameters.GetPrioritiesByPriorityScheme, callback: Callback<T>): Promise<void>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of
     * priorities by scheme.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * Permission to access Jira.
     */
    getPrioritiesByPriorityScheme<T = Paginated<Models.PriorityWithSequence>>(parameters: Parameters.GetPrioritiesByPriorityScheme, callback?: never): Promise<T>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of
     * projects by scheme.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * Permission to access Jira.
     */
    getProjectsByPriorityScheme<T = Models.PageProject>(parameters: Parameters.GetProjectsByPriorityScheme, callback: Callback<T>): Promise<void>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#pagination) list of
     * projects by scheme.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v3/intro/#permissions) required:**
     * Permission to access Jira.
     */
    getProjectsByPriorityScheme<T = Models.PageProject>(parameters: Parameters.GetProjectsByPriorityScheme, callback?: never): Promise<T>;
}
