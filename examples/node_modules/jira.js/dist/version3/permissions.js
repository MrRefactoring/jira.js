"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Permissions = void 0;
const tslib_1 = require("tslib");
class Permissions {
    constructor(client) {
        this.client = client;
    }
    getMyPermissions(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/mypermissions',
                method: 'GET',
                params: {
                    projectKey: parameters === null || parameters === void 0 ? void 0 : parameters.projectKey,
                    projectId: parameters === null || parameters === void 0 ? void 0 : parameters.projectId,
                    issueKey: parameters === null || parameters === void 0 ? void 0 : parameters.issueKey,
                    issueId: parameters === null || parameters === void 0 ? void 0 : parameters.issueId,
                    permissions: parameters === null || parameters === void 0 ? void 0 : parameters.permissions,
                    projectUuid: parameters === null || parameters === void 0 ? void 0 : parameters.projectUuid,
                    projectConfigurationUuid: parameters === null || parameters === void 0 ? void 0 : parameters.projectConfigurationUuid,
                    commentId: parameters === null || parameters === void 0 ? void 0 : parameters.commentId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getAllPermissions(callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/permissions',
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getBulkPermissions(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/permissions/check',
                method: 'POST',
                data: {
                    accountId: parameters === null || parameters === void 0 ? void 0 : parameters.accountId,
                    globalPermissions: parameters === null || parameters === void 0 ? void 0 : parameters.globalPermissions,
                    projectPermissions: parameters === null || parameters === void 0 ? void 0 : parameters.projectPermissions,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getPermittedProjects(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/permissions/project',
                method: 'POST',
                data: {
                    permissions: parameters === null || parameters === void 0 ? void 0 : parameters.permissions,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.Permissions = Permissions;
//# sourceMappingURL=permissions.js.map