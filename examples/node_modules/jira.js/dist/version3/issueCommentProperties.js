"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IssueCommentProperties = void 0;
const tslib_1 = require("tslib");
class IssueCommentProperties {
    constructor(client) {
        this.client = client;
    }
    getCommentPropertyKeys(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const commentId = typeof parameters === 'string' ? parameters : parameters.commentId;
            const config = {
                url: `/rest/api/3/comment/${commentId}/properties`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getCommentProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/comment/${parameters.commentId}/properties/${parameters.propertyKey}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    setCommentProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/comment/${parameters.commentId}/properties/${parameters.propertyKey}`,
                method: 'PUT',
                data: parameters.property,
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteCommentProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/comment/${parameters.commentId}/properties/${parameters.propertyKey}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.IssueCommentProperties = IssueCommentProperties;
//# sourceMappingURL=issueCommentProperties.js.map