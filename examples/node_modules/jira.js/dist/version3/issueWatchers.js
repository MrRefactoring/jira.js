"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IssueWatchers = void 0;
const tslib_1 = require("tslib");
class IssueWatchers {
    constructor(client) {
        this.client = client;
    }
    getIsWatchingIssueBulk(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/api/3/issue/watching',
                method: 'POST',
                data: {
                    issueIds: parameters === null || parameters === void 0 ? void 0 : parameters.issueIds,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getIssueWatchers(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/issue/${parameters.issueIdOrKey}/watchers`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    addWatcher(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/issue/${parameters.issueIdOrKey}/watchers`,
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                data: parameters.accountId,
            };
            return this.client.sendRequest(config, callback);
        });
    }
    removeWatcher(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/3/issue/${parameters.issueIdOrKey}/watchers`,
                method: 'DELETE',
                params: {
                    username: parameters.username,
                    accountId: parameters.accountId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.IssueWatchers = IssueWatchers;
//# sourceMappingURL=issueWatchers.js.map