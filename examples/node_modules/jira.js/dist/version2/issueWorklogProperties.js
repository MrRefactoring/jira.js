"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IssueWorklogProperties = void 0;
const tslib_1 = require("tslib");
class IssueWorklogProperties {
    constructor(client) {
        this.client = client;
    }
    getWorklogPropertyKeys(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/issue/${parameters.issueIdOrKey}/worklog/${parameters.worklogId}/properties`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getWorklogProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/issue/${parameters.issueIdOrKey}/worklog/${parameters.worklogId}/properties/${parameters.propertyKey}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    setWorklogProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/issue/${parameters.issueIdOrKey}/worklog/${parameters.worklogId}/properties/${parameters.propertyKey}`,
                method: 'PUT',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteWorklogProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/api/2/issue/${parameters.issueIdOrKey}/worklog/${parameters.worklogId}/properties/${parameters.propertyKey}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.IssueWorklogProperties = IssueWorklogProperties;
//# sourceMappingURL=issueWorklogProperties.js.map