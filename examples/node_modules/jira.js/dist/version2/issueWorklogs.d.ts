import type * as Models from './models';
import type * as Parameters from './parameters';
import type { Client } from '../clients';
import type { Callback } from '../callback';
export declare class IssueWorklogs {
    private client;
    constructor(client: Client);
    /**
     * Returns worklogs for an issue (ordered by created time), starting from the oldest worklog or from the worklog
     * started on or after a date and time.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * Workloads are only returned where the user has:
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is
     *   in.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    getIssueWorklog<T = Models.PageOfWorklogs>(parameters: Parameters.GetIssueWorklog | string, callback: Callback<T>): Promise<void>;
    /**
     * Returns worklogs for an issue (ordered by created time), starting from the oldest worklog or from the worklog
     * started on or after a date and time.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * Workloads are only returned where the user has:
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is
     *   in.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    getIssueWorklog<T = Models.PageOfWorklogs>(parameters: Parameters.GetIssueWorklog | string, callback?: never): Promise<T>;
    /**
     * Adds a worklog to an issue.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ and _Work on issues_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the
     *   project that the issue is in.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     */
    addWorklog<T = Models.Worklog>(parameters: Parameters.AddWorklog, callback: Callback<T>): Promise<void>;
    /**
     * Adds a worklog to an issue.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ and _Work on issues_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the
     *   project that the issue is in.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     */
    addWorklog<T = Models.Worklog>(parameters: Parameters.AddWorklog, callback?: never): Promise<T>;
    /**
     * Deletes a list of worklogs from an issue. This is an experimental API with limitations:
     *
     * - You can't delete more than 5000 worklogs at once.
     * - No notifications will be sent for deleted worklogs.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the
     *   issue.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - _Delete all worklogs_[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any worklog.
     * - If any worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    bulkDeleteWorklogs<T = void>(parameters: Parameters.BulkDeleteWorklogs, callback: Callback<T>): Promise<void>;
    /**
     * Deletes a list of worklogs from an issue. This is an experimental API with limitations:
     *
     * - You can't delete more than 5000 worklogs at once.
     * - No notifications will be sent for deleted worklogs.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the
     *   issue.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - _Delete all worklogs_[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any worklog.
     * - If any worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    bulkDeleteWorklogs<T = void>(parameters: Parameters.BulkDeleteWorklogs, callback?: never): Promise<T>;
    /**
     * Moves a list of worklogs from one issue to another. This is an experimental API with several limitations:
     *
     * - You can't move more than 5000 worklogs at once.
     * - You can't move worklogs containing an attachment.
     * - You can't move worklogs restricted by project roles.
     * - No notifications will be sent for moved worklogs.
     * - No webhooks or events will be sent for moved worklogs.
     * - No issue history will be recorded for moved worklogs.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the projects containing the
     *   source and destination issues.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - _Delete all worklogs_[ and _Edit all worklogs_](https://confluence.atlassian.com/x/yodKLg)[project
     *   permission](https://confluence.atlassian.com/x/yodKLg)
     * - If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    bulkMoveWorklogs<T = void>(parameters: Parameters.BulkMoveWorklogs, callback: Callback<T>): Promise<void>;
    /**
     * Moves a list of worklogs from one issue to another. This is an experimental API with several limitations:
     *
     * - You can't move more than 5000 worklogs at once.
     * - You can't move worklogs containing an attachment.
     * - You can't move worklogs restricted by project roles.
     * - No notifications will be sent for moved worklogs.
     * - No webhooks or events will be sent for moved worklogs.
     * - No issue history will be recorded for moved worklogs.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the projects containing the
     *   source and destination issues.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - _Delete all worklogs_[ and _Edit all worklogs_](https://confluence.atlassian.com/x/yodKLg)[project
     *   permission](https://confluence.atlassian.com/x/yodKLg)
     * - If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    bulkMoveWorklogs<T = void>(parameters: Parameters.BulkMoveWorklogs, callback?: never): Promise<T>;
    /**
     * Returns a worklog.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is
     *   in.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    getWorklog<T = Models.Worklog>(parameters: Parameters.GetWorklog, callback: Callback<T>): Promise<void>;
    /**
     * Returns a worklog.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is
     *   in.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    getWorklog<T = Models.Worklog>(parameters: Parameters.GetWorklog, callback?: never): Promise<T>;
    /**
     * Updates a worklog.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is
     *   in.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - _Edit all worklogs_[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any worklog or _Edit
     *   own worklogs_ to update worklogs created by the user.
     * - If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    updateWorklog<T = Models.Worklog>(parameters: Parameters.UpdateWorklog, callback: Callback<T>): Promise<void>;
    /**
     * Updates a worklog.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is
     *   in.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - _Edit all worklogs_[ project permission](https://confluence.atlassian.com/x/yodKLg) to update any worklog or _Edit
     *   own worklogs_ to update worklogs created by the user.
     * - If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    updateWorklog<T = Models.Worklog>(parameters: Parameters.UpdateWorklog, callback?: never): Promise<T>;
    /**
     * Deletes a worklog from an issue.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is
     *   in.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - _Delete all worklogs_[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any worklog or
     *   _Delete own worklogs_ to delete worklogs created by the user,
     * - If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    deleteWorklog<T = void>(parameters: Parameters.DeleteWorklog, callback: Callback<T>): Promise<void>;
    /**
     * Deletes a worklog from an issue.
     *
     * Time tracking must be enabled in Jira, otherwise this operation returns an error. For more information, see
     * [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     *
     * - _Browse projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is
     *   in.
     * - If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission
     *   to view the issue.
     * - _Delete all worklogs_[ project permission](https://confluence.atlassian.com/x/yodKLg) to delete any worklog or
     *   _Delete own worklogs_ to delete worklogs created by the user,
     * - If the worklog has visibility restrictions, belongs to the group or has the role visibility is restricted to.
     */
    deleteWorklog<T = void>(parameters: Parameters.DeleteWorklog, callback?: never): Promise<T>;
    /**
     * Returns a list of IDs and delete timestamps for worklogs deleted after a date and time.
     *
     * This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to
     * youngest. If the number of items in the date range exceeds 1000, `until` indicates the timestamp of the youngest
     * item on the page. Also, `nextPage` provides the URL for the next page of worklogs. The `lastPage` parameter is set
     * to true on the last page of worklogs.
     *
     * This resource does not return worklogs deleted during the minute preceding the request.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * Permission to access Jira.
     */
    getIdsOfWorklogsDeletedSince<T = Models.ChangedWorklogs>(parameters: Parameters.GetIdsOfWorklogsDeletedSince | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Returns a list of IDs and delete timestamps for worklogs deleted after a date and time.
     *
     * This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to
     * youngest. If the number of items in the date range exceeds 1000, `until` indicates the timestamp of the youngest
     * item on the page. Also, `nextPage` provides the URL for the next page of worklogs. The `lastPage` parameter is set
     * to true on the last page of worklogs.
     *
     * This resource does not return worklogs deleted during the minute preceding the request.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * Permission to access Jira.
     */
    getIdsOfWorklogsDeletedSince<T = Models.ChangedWorklogs>(parameters?: Parameters.GetIdsOfWorklogsDeletedSince, callback?: never): Promise<T>;
    /**
     * Returns worklog details for a list of worklog IDs.
     *
     * The returned list of worklogs is limited to 1000 items.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * Permission to access Jira, however, worklogs are only returned where either of the following is true:
     *
     * - The worklog is set as _Viewable by All Users_.
     * - The user is a member of a project role or group with permission to view the worklog.
     */
    getWorklogsForIds<T = Models.Worklog[]>(parameters: Parameters.GetWorklogsForIds | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Returns worklog details for a list of worklog IDs.
     *
     * The returned list of worklogs is limited to 1000 items.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * Permission to access Jira, however, worklogs are only returned where either of the following is true:
     *
     * - The worklog is set as _Viewable by All Users_.
     * - The user is a member of a project role or group with permission to view the worklog.
     */
    getWorklogsForIds<T = Models.Worklog[]>(parameters?: Parameters.GetWorklogsForIds, callback?: never): Promise<T>;
    /**
     * Returns a list of IDs and update timestamps for worklogs updated after a date and time.
     *
     * This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to
     * youngest. If the number of items in the date range exceeds 1000, `until` indicates the timestamp of the youngest
     * item on the page. Also, `nextPage` provides the URL for the next page of worklogs. The `lastPage` parameter is set
     * to true on the last page of worklogs.
     *
     * This resource does not return worklogs updated during the minute preceding the request.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * Permission to access Jira, however, worklogs are only returned where either of the following is true:
     *
     * - The worklog is set as _Viewable by All Users_.
     * - The user is a member of a project role or group with permission to view the worklog.
     */
    getIdsOfWorklogsModifiedSince<T = Models.ChangedWorklogs>(parameters: Parameters.GetIdsOfWorklogsModifiedSince | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Returns a list of IDs and update timestamps for worklogs updated after a date and time.
     *
     * This resource is paginated, with a limit of 1000 worklogs per page. Each page lists worklogs from oldest to
     * youngest. If the number of items in the date range exceeds 1000, `until` indicates the timestamp of the youngest
     * item on the page. Also, `nextPage` provides the URL for the next page of worklogs. The `lastPage` parameter is set
     * to true on the last page of worklogs.
     *
     * This resource does not return worklogs updated during the minute preceding the request.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * Permission to access Jira, however, worklogs are only returned where either of the following is true:
     *
     * - The worklog is set as _Viewable by All Users_.
     * - The user is a member of a project role or group with permission to view the worklog.
     */
    getIdsOfWorklogsModifiedSince<T = Models.ChangedWorklogs>(parameters?: Parameters.GetIdsOfWorklogsModifiedSince, callback?: never): Promise<T>;
}
