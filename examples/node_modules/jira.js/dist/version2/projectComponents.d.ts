import type * as Models from './models';
import type * as Parameters from './parameters';
import type { Client } from '../clients';
import type { Callback } from '../callback';
import type { Paginated } from '../paginated';
export declare class ProjectComponents {
    private client;
    constructor(client: Client);
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#pagination) list of all
     * components in a project, including global (Compass) components when applicable.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** _Browse
     * Projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     */
    findComponentsForProjects<T = Paginated<Models.Component>>(parameters: Parameters.FindComponentsForProjects | undefined, callback: Callback<T>): Promise<void>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#pagination) list of all
     * components in a project, including global (Compass) components when applicable.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** _Browse
     * Projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     */
    findComponentsForProjects<T = Paginated<Models.Component>>(parameters?: Parameters.FindComponentsForProjects, callback?: never): Promise<T>;
    /**
     * Creates a component. Use components to provide containers for issues within a project. Use components to provide
     * containers for issues within a project.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * _Administer projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the
     * component is created or _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    createComponent<T = Models.ProjectComponent>(parameters: Parameters.CreateComponent, callback: Callback<T>): Promise<void>;
    /**
     * Creates a component. Use components to provide containers for issues within a project. Use components to provide
     * containers for issues within a project.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * _Administer projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project in which the
     * component is created or _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    createComponent<T = Models.ProjectComponent>(parameters: Parameters.CreateComponent, callback?: never): Promise<T>;
    /**
     * Returns a component.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** _Browse
     * projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for project containing the component.
     */
    getComponent<T = Models.ProjectComponent>(parameters: Parameters.GetComponent | string, callback: Callback<T>): Promise<void>;
    /**
     * Returns a component.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** _Browse
     * projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for project containing the component.
     */
    getComponent<T = Models.ProjectComponent>(parameters: Parameters.GetComponent | string, callback?: never): Promise<T>;
    /**
     * Updates a component. Any fields included in the request are overwritten. If `leadAccountId` is an empty string ("")
     * the component lead is removed.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * _Administer projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing
     * the component or _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    updateComponent<T = Models.ProjectComponent>(parameters: Parameters.UpdateComponent, callback: Callback<T>): Promise<void>;
    /**
     * Updates a component. Any fields included in the request are overwritten. If `leadAccountId` is an empty string ("")
     * the component lead is removed.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * _Administer projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing
     * the component or _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    updateComponent<T = Models.ProjectComponent>(parameters: Parameters.UpdateComponent, callback?: never): Promise<T>;
    /**
     * Deletes a component.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * _Administer projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing
     * the component or _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    deleteComponent<T = void>(parameters: Parameters.DeleteComponent | string, callback: Callback<T>): Promise<void>;
    /**
     * Deletes a component.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:**
     * _Administer projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing
     * the component or _Administer Jira_ [global permission](https://confluence.atlassian.com/x/x4dKLg).
     */
    deleteComponent<T = void>(parameters: Parameters.DeleteComponent | string, callback?: never): Promise<T>;
    /**
     * Returns the counts of issues assigned to the component.
     *
     * This operation can be accessed anonymously.
     *
     * **Deprecation notice:** The required OAuth 2.0 scopes will be updated on June 15, 2024.
     *
     * - **Classic**: `read:jira-work`
     * - **Granular**: `read:field:jira`, `read:project.component:jira`
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** None.
     */
    getComponentRelatedIssues<T = Models.ComponentIssuesCount>(parameters: Parameters.GetComponentRelatedIssues | string, callback: Callback<T>): Promise<void>;
    /**
     * Returns the counts of issues assigned to the component.
     *
     * This operation can be accessed anonymously.
     *
     * **Deprecation notice:** The required OAuth 2.0 scopes will be updated on June 15, 2024.
     *
     * - **Classic**: `read:jira-work`
     * - **Granular**: `read:field:jira`, `read:project.component:jira`
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** None.
     */
    getComponentRelatedIssues<T = Models.ComponentIssuesCount>(parameters: Parameters.GetComponentRelatedIssues | string, callback?: never): Promise<T>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#pagination) list of all
     * components in a project. See the [Get project components](#api-rest-api-2-project-projectIdOrKey-components-get)
     * resource if you want to get a full list of versions without pagination.
     *
     * If your project uses Compass components, this API will return a list of Compass components that are linked to
     * issues in that project.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** _Browse
     * Projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     */
    getProjectComponentsPaginated<T = Models.PageComponentWithIssueCount>(parameters: Parameters.GetProjectComponentsPaginated, callback: Callback<T>): Promise<void>;
    /**
     * Returns a [paginated](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#pagination) list of all
     * components in a project. See the [Get project components](#api-rest-api-2-project-projectIdOrKey-components-get)
     * resource if you want to get a full list of versions without pagination.
     *
     * If your project uses Compass components, this API will return a list of Compass components that are linked to
     * issues in that project.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** _Browse
     * Projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     */
    getProjectComponentsPaginated<T = Models.PageComponentWithIssueCount>(parameters: Parameters.GetProjectComponentsPaginated, callback?: never): Promise<T>;
    /**
     * Returns all components in a project. See the [Get project components
     * paginated](#api-rest-api-2-project-projectIdOrKey-component-get) resource if you want to get a full list of
     * components with pagination.
     *
     * If your project uses Compass components, this API will return a paginated list of Compass components that are
     * linked to issues in that project.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** _Browse
     * Projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     */
    getProjectComponents<T = Models.ProjectComponent[]>(parameters: Parameters.GetProjectComponents | string, callback: Callback<T>): Promise<void>;
    /**
     * Returns all components in a project. See the [Get project components
     * paginated](#api-rest-api-2-project-projectIdOrKey-component-get) resource if you want to get a full list of
     * components with pagination.
     *
     * If your project uses Compass components, this API will return a paginated list of Compass components that are
     * linked to issues in that project.
     *
     * This operation can be accessed anonymously.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/platform/rest/v2/intro/#permissions) required:** _Browse
     * Projects_ [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
     */
    getProjectComponents<T = Models.ProjectComponent[]>(parameters: Parameters.GetProjectComponents | string, callback?: never): Promise<T>;
}
