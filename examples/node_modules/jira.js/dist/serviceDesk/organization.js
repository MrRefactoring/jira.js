"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Organization = void 0;
const tslib_1 = require("tslib");
class Organization {
    constructor(client) {
        this.client = client;
    }
    getOrganizations(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/servicedeskapi/organization',
                method: 'GET',
                params: {
                    start: parameters === null || parameters === void 0 ? void 0 : parameters.start,
                    limit: parameters === null || parameters === void 0 ? void 0 : parameters.limit,
                    accountId: parameters === null || parameters === void 0 ? void 0 : parameters.accountId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    createOrganization(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/servicedeskapi/organization',
                method: 'POST',
                data: {
                    name: parameters === null || parameters === void 0 ? void 0 : parameters.name,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getOrganization(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/organization/${parameters.organizationId}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteOrganization(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/organization/${parameters.organizationId}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getPropertiesKeys(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/organization/${parameters.organizationId}/property`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/organization/${parameters.organizationId}/property/${parameters.propertyKey}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    setProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/organization/${parameters.organizationId}/property/${parameters.propertyKey}`,
                method: 'PUT',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/organization/${parameters.organizationId}/property/${parameters.propertyKey}`,
                method: 'DELETE',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getUsersInOrganization(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/organization/${parameters.organizationId}/user`,
                method: 'GET',
                params: {
                    start: parameters.start,
                    limit: parameters.limit,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    addUsersToOrganization(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/organization/${parameters.organizationId}/user`,
                method: 'POST',
                data: {
                    accountIds: parameters.accountIds,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    removeUsersFromOrganization(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/organization/${parameters.organizationId}/user`,
                method: 'DELETE',
                data: {
                    accountIds: parameters.accountIds,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getServiceDeskOrganizations(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/servicedesk/${parameters.serviceDeskId}/organization`,
                method: 'GET',
                params: {
                    start: parameters.start,
                    limit: parameters.limit,
                    accountId: parameters.accountId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    addOrganization(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/servicedesk/${parameters.serviceDeskId}/organization`,
                method: 'POST',
                data: {
                    organizationId: parameters.organizationId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    removeOrganization(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/servicedeskapi/servicedesk/${parameters.serviceDeskId}/organization`,
                method: 'DELETE',
                data: {
                    organizationId: parameters.organizationId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.Organization = Organization;
//# sourceMappingURL=organization.js.map