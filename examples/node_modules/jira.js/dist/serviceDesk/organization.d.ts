import type * as Models from './models';
import type * as Parameters from './parameters';
import type { Callback } from '../callback';
import type { Client } from '../clients';
export declare class Organization {
    private client;
    constructor(client: Client);
    /**
     * This method returns a list of organizations in the Jira Service Management instance. Use this method when you want
     * to present a list of organizations or want to locate an organization by name.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**: Any.
     * However, to fetch organizations based on `accountId` the user must have a Service Desk agent license.
     *
     * **Response limitations**: If the user is a customer, only those organizations of which the customer is a member are
     * listed.
     */
    getOrganizations<T = Models.PagedOrganization>(parameters: Parameters.GetOrganizations | undefined, callback: Callback<T>): Promise<void>;
    /**
     * This method returns a list of organizations in the Jira Service Management instance. Use this method when you want
     * to present a list of organizations or want to locate an organization by name.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**: Any.
     * However, to fetch organizations based on `accountId` the user must have a Service Desk agent license.
     *
     * **Response limitations**: If the user is a customer, only those organizations of which the customer is a member are
     * listed.
     */
    getOrganizations<T = Models.PagedOrganization>(parameters?: Parameters.GetOrganizations, callback?: never): Promise<T>;
    /**
     * This method creates an organization by passing the name of the organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk administrator or agent. Note: Permission to create organizations can be switched to users with the
     * Jira administrator permission, using the **[Organization
     * management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)**
     * feature.
     */
    createOrganization<T = Models.Organization>(parameters: Parameters.CreateOrganization | undefined, callback: Callback<T>): Promise<void>;
    /**
     * This method creates an organization by passing the name of the organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk administrator or agent. Note: Permission to create organizations can be switched to users with the
     * Jira administrator permission, using the **[Organization
     * management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)**
     * feature.
     */
    createOrganization<T = Models.Organization>(parameters?: Parameters.CreateOrganization, callback?: never): Promise<T>;
    /**
     * This method returns details of an organization. Use this method to get organization details whenever your
     * application component is passed an organization ID but needs to display other organization details.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**: Any
     *
     * **Response limitations**: Customers can only retrieve organization of which they are members.
     */
    getOrganization<T = Models.Organization>(parameters: Parameters.GetOrganization, callback: Callback<T>): Promise<void>;
    /**
     * This method returns details of an organization. Use this method to get organization details whenever your
     * application component is passed an organization ID but needs to display other organization details.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**: Any
     *
     * **Response limitations**: Customers can only retrieve organization of which they are members.
     */
    getOrganization<T = Models.Organization>(parameters: Parameters.GetOrganization, callback?: never): Promise<T>;
    /**
     * This method deletes an organization. Note that the organization is deleted regardless of other associations it may
     * have. For example, associations with service desks.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**: Jira
     * administrator.
     */
    deleteOrganization<T = void>(parameters: Parameters.DeleteOrganization, callback: Callback<T>): Promise<void>;
    /**
     * This method deletes an organization. Note that the organization is deleted regardless of other associations it may
     * have. For example, associations with service desks.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**: Jira
     * administrator.
     */
    deleteOrganization<T = void>(parameters: Parameters.DeleteOrganization, callback?: never): Promise<T>;
    /**
     * Returns the keys of all properties for an organization. Use this resource when you need to find out what additional
     * properties items have been added to an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**: Any
     *
     * **Response limitations**: Customers can only access properties of organizations of which they are members.
     */
    getPropertiesKeys<T = Models.PropertyKeys>(parameters: Parameters.GetOrganizationPropertyKeys, callback: Callback<T>): Promise<void>;
    /**
     * Returns the keys of all properties for an organization. Use this resource when you need to find out what additional
     * properties items have been added to an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**: Any
     *
     * **Response limitations**: Customers can only access properties of organizations of which they are members.
     */
    getPropertiesKeys<T = Models.PropertyKeys>(parameters: Parameters.GetOrganizationPropertyKeys, callback?: never): Promise<T>;
    /**
     * Returns the value of a property from an organization. Use this method to obtain the JSON content for an
     * organization's property.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**: Any
     *
     * **Response limitations**: Customers can only access properties of organizations of which they are members.
     */
    getProperty<T = Models.EntityProperty>(parameters: Parameters.GetOrganizationProperty, callback: Callback<T>): Promise<void>;
    /**
     * Returns the value of a property from an organization. Use this method to obtain the JSON content for an
     * organization's property.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**: Any
     *
     * **Response limitations**: Customers can only access properties of organizations of which they are members.
     */
    getProperty<T = Models.EntityProperty>(parameters: Parameters.GetOrganizationProperty, callback?: never): Promise<T>;
    /**
     * Sets the value of a property for an organization. Use this resource to store custom data against an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service Desk Administrator or Agent.
     *
     * Note: Permission to manage organizations can be switched to users with the Jira administrator permission, using the
     * **[Organization
     * management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)**
     * feature.
     */
    setProperty<T = unknown>(parameters: Parameters.SetOrganizationProperty, callback: Callback<T>): Promise<void>;
    /**
     * Sets the value of a property for an organization. Use this resource to store custom data against an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service Desk Administrator or Agent.
     *
     * Note: Permission to manage organizations can be switched to users with the Jira administrator permission, using the
     * **[Organization
     * management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)**
     * feature.
     */
    setProperty<T = unknown>(parameters: Parameters.SetOrganizationProperty, callback?: never): Promise<T>;
    /**
     * Removes a property from an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service Desk Administrator or Agent.
     *
     * Note: Permission to manage organizations can be switched to users with the Jira administrator permission, using the
     * **[Organization
     * management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)**
     * feature.
     */
    deleteProperty<T = void>(parameters: Parameters.DeleteOrganizationProperty, callback: Callback<T>): Promise<void>;
    /**
     * Removes a property from an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service Desk Administrator or Agent.
     *
     * Note: Permission to manage organizations can be switched to users with the Jira administrator permission, using the
     * **[Organization
     * management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)**
     * feature.
     */
    deleteProperty<T = void>(parameters: Parameters.DeleteOrganizationProperty, callback?: never): Promise<T>;
    /**
     * This method returns all the users associated with an organization. Use this method where you want to provide a list
     * of users for an organization or determine if a user is associated with an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk administrator or agent.
     */
    getUsersInOrganization<T = Models.PagedUser>(parameters: Parameters.GetUsersInOrganization, callback: Callback<T>): Promise<void>;
    /**
     * This method returns all the users associated with an organization. Use this method where you want to provide a list
     * of users for an organization or determine if a user is associated with an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk administrator or agent.
     */
    getUsersInOrganization<T = Models.PagedUser>(parameters: Parameters.GetUsersInOrganization, callback?: never): Promise<T>;
    /**
     * This method adds users to an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk administrator or agent. Note: Permission to add users to an organization can be switched to users with
     * the Jira administrator permission, using the **[Organization
     * management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)**
     * feature.
     */
    addUsersToOrganization<T = void>(parameters: Parameters.AddUsersToOrganization, callback: Callback<T>): Promise<void>;
    /**
     * This method adds users to an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk administrator or agent. Note: Permission to add users to an organization can be switched to users with
     * the Jira administrator permission, using the **[Organization
     * management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)**
     * feature.
     */
    addUsersToOrganization<T = void>(parameters: Parameters.AddUsersToOrganization, callback?: never): Promise<T>;
    /**
     * This method removes users from an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk administrator or agent. Note: Permission to delete users from an organization can be switched to users
     * with the Jira administrator permission, using the **[Organization
     * management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)**
     * feature.
     */
    removeUsersFromOrganization<T = void>(parameters: Parameters.RemoveUsersFromOrganization, callback: Callback<T>): Promise<void>;
    /**
     * This method removes users from an organization.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk administrator or agent. Note: Permission to delete users from an organization can be switched to users
     * with the Jira administrator permission, using the **[Organization
     * management](https://confluence.atlassian.com/servicedeskcloud/setting-up-service-desk-users-732528877.html#Settingupservicedeskusers-manageorgsManageorganizations)**
     * feature.
     */
    removeUsersFromOrganization<T = void>(parameters: Parameters.RemoveUsersFromOrganization, callback?: never): Promise<T>;
    /**
     * This method returns a list of all organizations associated with a service desk.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk's agent.
     */
    getServiceDeskOrganizations<T = Models.PagedOrganization>(parameters: Parameters.GetOrganizations, callback: Callback<T>): Promise<void>;
    /**
     * This method returns a list of all organizations associated with a service desk.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk's agent.
     */
    getServiceDeskOrganizations<T = Models.PagedOrganization>(parameters: Parameters.GetOrganizations, callback?: never): Promise<T>;
    /**
     * This method adds an organization to a service desk. If the organization ID is already associated with the service
     * desk, no change is made and the resource returns a 204 success code.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk's agent.
     */
    addOrganization<T = void>(parameters: Parameters.AddOrganization, callback: Callback<T>): Promise<void>;
    /**
     * This method adds an organization to a service desk. If the organization ID is already associated with the service
     * desk, no change is made and the resource returns a 204 success code.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk's agent.
     */
    addOrganization<T = void>(parameters: Parameters.AddOrganization, callback?: never): Promise<T>;
    /**
     * This method removes an organization from a service desk. If the organization ID does not match an organization
     * associated with the service desk, no change is made and the resource returns a 204 success code.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk's agent.
     */
    removeOrganization<T = void>(parameters: Parameters.RemoveOrganization, callback: Callback<T>): Promise<void>;
    /**
     * This method removes an organization from a service desk. If the organization ID does not match an organization
     * associated with the service desk, no change is made and the resource returns a 204 success code.
     *
     * **[Permissions](https://developer.atlassian.com/cloud/jira/service-desk/rest/intro/#permissions) required**:
     * Service desk's agent.
     */
    removeOrganization<T = void>(parameters: Parameters.RemoveOrganization, callback?: never): Promise<T>;
}
