"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RemoteLinks = void 0;
const tslib_1 = require("tslib");
class RemoteLinks {
    constructor(client) {
        this.client = client;
    }
    submitRemoteLinks(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/remotelinks/1.0/bulk',
                method: 'POST',
                data: {
                    properties: parameters.properties,
                    remoteLinks: parameters.remoteLinks,
                    providerMetadata: parameters.providerMetadata,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteRemoteLinksByProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/remotelinks/1.0/bulkByProperties',
                method: 'DELETE',
                params: {
                    _updateSequenceNumber: parameters.updateSequenceNumber,
                    params: parameters.params,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getRemoteLinkById(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/remotelinks/1.0/remotelink/${parameters.remoteLinkId}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteRemoteLinkById(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/remotelinks/1.0/remotelink/${parameters.remoteLinkId}`,
                method: 'DELETE',
                params: {
                    _updateSequenceNumber: parameters.updateSequenceNumber,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.RemoteLinks = RemoteLinks;
//# sourceMappingURL=remoteLinks.js.map