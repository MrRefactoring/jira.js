"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeatureFlags = void 0;
const tslib_1 = require("tslib");
class FeatureFlags {
    constructor(client) {
        this.client = client;
    }
    submitFeatureFlags(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/featureflags/0.1/bulk',
                method: 'POST',
                data: {
                    properties: parameters.properties,
                    flags: parameters.flags,
                    providerMetadata: parameters.providerMetadata,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteFeatureFlagsByProperty(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: '/rest/featureflags/0.1/bulkByProperties',
                method: 'DELETE',
                params: {
                    _updateSequenceId: parameters.updateSequenceId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
    getFeatureFlagById(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/featureflags/0.1/flag/${parameters.featureFlagId}`,
                method: 'GET',
            };
            return this.client.sendRequest(config, callback);
        });
    }
    deleteFeatureFlagById(parameters, callback) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const config = {
                url: `/rest/featureflags/0.1/flag/${parameters.featureFlagId}`,
                method: 'DELETE',
                params: {
                    _updateSequenceId: parameters.updateSequenceId,
                },
            };
            return this.client.sendRequest(config, callback);
        });
    }
}
exports.FeatureFlags = FeatureFlags;
//# sourceMappingURL=featureFlags.js.map