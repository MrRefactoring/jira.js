import { Spec } from "comment-parser";
declare const ABSTRACT = "abstract";
declare const ASYNC = "async";
declare const AUGMENTS = "augments";
declare const AUTHOR = "author";
declare const BORROWS = "borrows";
declare const CALLBACK = "callback";
declare const CATEGORY = "category";
declare const CLASS = "class";
declare const CONSTANT = "constant";
declare const DEFAULT = "default";
declare const DEFAULT_VALUE = "defaultValue";
declare const DEPRECATED = "deprecated";
declare const DESCRIPTION = "description";
declare const EXAMPLE = "example";
declare const EXTENDS = "extends";
declare const EXTERNAL = "external";
declare const FILE = "file";
declare const FIRES = "fires";
declare const FLOW = "flow";
declare const FUNCTION = "function";
declare const IGNORE = "ignore";
declare const LICENSE = "license";
declare const MEMBER = "member";
declare const MEMBEROF = "memberof";
declare const MODULE = "module";
declare const NAMESPACE = "namespace";
declare const OVERLOAD = "overload";
declare const OVERRIDE = "override";
declare const PARAM = "param";
declare const PRIVATE = "private";
declare const PRIVATE_REMARKS = "privateRemarks";
declare const PROPERTY = "property";
declare const PROVIDES_MODULE = "providesModule";
declare const REMARKS = "remarks";
declare const RETURNS = "returns";
declare const SEE = "see";
declare const SINCE = "since";
declare const TEMPLATE = "template";
declare const THROWS = "throws";
declare const TODO = "todo";
declare const TYPE = "type";
declare const TYPE_PARAM = "typeParam";
declare const TYPEDEF = "typedef";
declare const SATISFIES = "satisfies";
declare const VERSION = "version";
declare const YIELDS = "yields";
declare const SPACE_TAG_DATA: Spec;
export { ABSTRACT, ASYNC, AUGMENTS, AUTHOR, BORROWS, CALLBACK, CATEGORY, CLASS, CONSTANT, DEFAULT, DEFAULT_VALUE, DEPRECATED, DESCRIPTION, EXAMPLE, EXTENDS, EXTERNAL, FILE, FIRES, FLOW, FUNCTION, IGNORE, LICENSE, MEMBER, MEMBEROF, MODULE, NAMESPACE, OVERLOAD, OVERRIDE, PARAM, PRIVATE_REMARKS, PRIVATE, PROPERTY, PROVIDES_MODULE, REMARKS, RETURNS, SEE, SINCE, TEMPLATE, THROWS, TODO, TYPE, TYPE_PARAM, TYPEDEF, SATISFIES, VERSION, YIELDS, SPACE_TAG_DATA, };
