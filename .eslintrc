{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:import/errors",
    "plugin:import/typescript"
  ],
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "plugins": [
    "import"
  ],
  "env": {
    "node": true,
    "browser": true,
    "jest": true
  },
  "rules": {
    "camelcase": "off",
    "semi": "error",
    "eqeqeq": "error",
    "eol-last": "error",
    "lines-between-class-members": "error",
    "no-trailing-spaces": "error",
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "quotes": [
      "error",
      "single"
    ],
    "prefer-const": "error",
    "no-var": "error",
    "no-undef": "error",
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "import/no-unresolved": "error",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": [
          "camelCase"
        ]
      },
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE"
        ]
      },
      {
        "selector": "parameter",
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "memberLike",
        "format": [
          "camelCase",
          "PascalCase"
        ],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      }
    ],
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": [
          "block",
          "block-like",
          "cjs-export",
          "class",
          "const",
          "export",
          "import",
          "let",
          "var"
        ]
      },
      {
        "blankLine": "always",
        "prev": [
          "block",
          "block-like",
          "cjs-export",
          "class",
          "const",
          "export",
          "import",
          "let",
          "var"
        ],
        "next": "*"
      },
      {
        "blankLine": "never",
        "prev": [
          "const",
          "let",
          "var"
        ],
        "next": [
          "const",
          "let",
          "var"
        ]
      },
      {
        "blankLine": "any",
        "prev": [
          "export",
          "import"
        ],
        "next": [
          "export",
          "import"
        ]
      }
    ]
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    }
  }
}
